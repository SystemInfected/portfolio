@use '../variables';

.headerBg {
  background: variables.$mainColorDark;
  display: flex;
  justify-content: center;
  width: 100%;
}

.headerContainer {
  align-items: flex-end;
  display: flex;
  height: calc(100svh - 60px);
  justify-content: center;
  position: relative;
  width: 100%;
}

.headerWrapper {
  left: 50%;
  max-width: variables.$breakpointMaxWidth;
  padding-left: max(4rem, env(safe-area-inset-left));
  pointer-events: none;
  position: absolute;
  top: 4rem;
  transform: translateX(-50%);
  opacity: 0;
  width: 100%;
  z-index: 20;
  @media screen and (max-width: variables.$breakpointTablet) {
    padding-left: 2.5em;
    top: 2.5em;
  }
  @media (orientation: portrait) {
    width: 100%;
    left: auto;
    transform: none;
    padding-left: 0;
  }
}

.header {
  color: variables.$mainAccentColor;
  font-family: variables.$headingsFont;
  font-size: min(clamp(2.5rem, 5.2vw, 10.4rem), clamp(2.5rem, 12vh, 10.4rem));
  font-weight: 450;
  letter-spacing: 0.02rem;
  line-height: 1.2;
  text-transform: uppercase;
  @media (orientation: portrait) {
    text-align: center;
    font-size: clamp(3.4rem, 10vw, 13rem);
  }
}

@keyframes rotatingHeader {
  3% {
    transform: translateY(-105%);
  }
  4% {
    transform: translateY(-105%);
  }
  13% {
    transform: translateY(-100%);
  }
  50% {
    transform: translateY(-100%);
  }
  53% {
    transform: translateY(-205%);
  }
  54% {
    transform: translateY(-205%);
  }
  63% {
    transform: translateY(-200%);
  }
  100% {
    transform: translateY(-200%);
  }
}

.headerText {
  display: block;
  position: relative;
  overflow: hidden;
  height: 2.4em;
  span {
    display: block;
    height: 100%;
  }
  span {
    animation-duration: 16s;
    animation-iteration-count: infinite;
    animation-name: rotatingHeader;
    animation-delay: 6s;
  }
  &:nth-of-type(2) {
    span {
      animation-delay: 6.1s;
    }
  }
}

.location {
  align-items: center;
  color: variables.$textLight;
  display: flex;
  font-family: variables.$headingsFont;
  font-size: min(clamp(2.5rem, 3vw, 5.2rem), clamp(2.5rem, 8vh, 5.2rem));
  font-weight: 200;
  letter-spacing: 0.08rem;
  line-height: 1.2;
  margin-top: 1em;
  @media (orientation: portrait) {
    width: 100%;
    justify-content: center;
  }
  svg {
    margin-right: 10px;
    font-size: clamp(1.8rem, 2.2vw, 4.2rem);
    align-self: center;
  }
}

.ctaWrapper {
  font-size: min(clamp(2.5rem, 3vw, 5.2rem), clamp(2.5rem, 8vh, 5.2rem));
  pointer-events: auto;
  max-width: 50%;
  margin-top: 1em;
  z-index: 20;
}

.cta {
  cursor: pointer;
  background-color: variables.$mainAccentColor;
  color: variables.$mainColorDark;
  @include variables.mainButton;
  @media (orientation: portrait) {
    display: none;
  }
}

@mixin portrait {
  align-items: flex-end;
  display: flex;
  height: calc(100svh - 60px);
  overflow: hidden;
  @media (orientation: portrait) {
    max-height: none;
  }
}

.portraitIllustration {
  justify-content: flex-end;
  margin-right: 5px;
  position: relative;
  user-select: none;
  -webkit-user-select: none;
  width: 68%;
  @include portrait;
  @media screen and (max-width: 3000px) {
    width: 73%;
  }
  svg {
    flex-shrink: 0;
    height: clamp(80%, 70vw, 115%);
    position: absolute;
  }
  img {
    height: clamp(80%, 70vw, 115%);
    width: auto;
    position: absolute;
    aspect-ratio: 900/1700;
  }
  canvas {
    height: clamp(80%, 70vw, 115%);
    position: absolute;
  }
  @media (orientation: portrait) {
    width: 50%;
  }
  &:after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
  }
}

.portraitNodes {
  padding-top: 0.4%;
  background: radial-gradient(
    ellipse at left 90%,
    rgba(variables.$mainColorLightRGB, 0.25) 0%,
    rgba(variables.$mainColorLightRGB, 0.16) 6%,
    rgba(0, 0, 0, 0) 38%
  );
  background-position: left bottom;
  background-repeat: no-repeat;
  background-size: 170% 95%;
  justify-content: flex-start;
  margin-left: 5px;
  user-select: none;
  -webkit-user-select: none;
  width: 32%;
  @include portrait;
  @media screen and (max-width: 3000px) {
    width: 27%;
  }
  canvas {
    flex-shrink: 0;
    height: clamp(80%, 70vw, 115%);
  }
  @media (orientation: portrait) {
    width: 50%;
  }
}

.portraitIllustration,
.portraitNodes {
  &:after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100vh;
    background: variables.$mainColorDark;
    opacity: var(--animate-opacity);
    pointer-events: none;
  }
}
